package com.blogspot.jesfre.bibletrivia.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class QuizEntryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizEntryAllPropertiesEquals(QuizEntry expected, QuizEntry actual) {
        assertQuizEntryAutoGeneratedPropertiesEquals(expected, actual);
        assertQuizEntryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizEntryAllUpdatablePropertiesEquals(QuizEntry expected, QuizEntry actual) {
        assertQuizEntryUpdatableFieldsEquals(expected, actual);
        assertQuizEntryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizEntryAutoGeneratedPropertiesEquals(QuizEntry expected, QuizEntry actual) {
        assertThat(expected)
            .as("Verify QuizEntry auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizEntryUpdatableFieldsEquals(QuizEntry expected, QuizEntry actual) {
        assertThat(expected)
            .as("Verify QuizEntry relevant properties")
            .satisfies(e -> assertThat(e.getOrderNum()).as("check orderNum").isEqualTo(actual.getOrderNum()))
            .satisfies(e -> assertThat(e.getCorrect()).as("check correct").isEqualTo(actual.getCorrect()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertQuizEntryUpdatableRelationshipsEquals(QuizEntry expected, QuizEntry actual) {
        assertThat(expected)
            .as("Verify QuizEntry relationships")
            .satisfies(e -> assertThat(e.getTriviaQuestion()).as("check triviaQuestion").isEqualTo(actual.getTriviaQuestion()))
            .satisfies(e -> assertThat(e.getTriviaAnswers()).as("check triviaAnswers").isEqualTo(actual.getTriviaAnswers()))
            .satisfies(e -> assertThat(e.getQuiz()).as("check quiz").isEqualTo(actual.getQuiz()));
    }
}
