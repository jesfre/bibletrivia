package com.blogspot.jesfre.bibletrivia.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BibleReferenceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBibleReferenceAllPropertiesEquals(BibleReference expected, BibleReference actual) {
        assertBibleReferenceAutoGeneratedPropertiesEquals(expected, actual);
        assertBibleReferenceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBibleReferenceAllUpdatablePropertiesEquals(BibleReference expected, BibleReference actual) {
        assertBibleReferenceUpdatableFieldsEquals(expected, actual);
        assertBibleReferenceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBibleReferenceAutoGeneratedPropertiesEquals(BibleReference expected, BibleReference actual) {
        assertThat(expected)
            .as("Verify BibleReference auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBibleReferenceUpdatableFieldsEquals(BibleReference expected, BibleReference actual) {
        assertThat(expected)
            .as("Verify BibleReference relevant properties")
            .satisfies(e -> assertThat(e.getBibleVerse()).as("check bibleVerse").isEqualTo(actual.getBibleVerse()))
            .satisfies(e -> assertThat(e.getVersion()).as("check version").isEqualTo(actual.getVersion()))
            .satisfies(e -> assertThat(e.getBook()).as("check book").isEqualTo(actual.getBook()))
            .satisfies(e -> assertThat(e.getChapter()).as("check chapter").isEqualTo(actual.getChapter()))
            .satisfies(e -> assertThat(e.getVerse()).as("check verse").isEqualTo(actual.getVerse()))
            .satisfies(e -> assertThat(e.getTestament()).as("check testament").isEqualTo(actual.getTestament()))
            .satisfies(e -> assertThat(e.getUrl()).as("check url").isEqualTo(actual.getUrl()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBibleReferenceUpdatableRelationshipsEquals(BibleReference expected, BibleReference actual) {
        assertThat(expected)
            .as("Verify BibleReference relationships")
            .satisfies(e -> assertThat(e.getTriviaAnswers()).as("check triviaAnswers").isEqualTo(actual.getTriviaAnswers()));
    }
}
