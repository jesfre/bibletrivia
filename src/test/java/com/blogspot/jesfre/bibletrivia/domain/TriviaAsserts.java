package com.blogspot.jesfre.bibletrivia.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TriviaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTriviaAllPropertiesEquals(Trivia expected, Trivia actual) {
        assertTriviaAutoGeneratedPropertiesEquals(expected, actual);
        assertTriviaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTriviaAllUpdatablePropertiesEquals(Trivia expected, Trivia actual) {
        assertTriviaUpdatableFieldsEquals(expected, actual);
        assertTriviaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTriviaAutoGeneratedPropertiesEquals(Trivia expected, Trivia actual) {
        assertThat(expected)
            .as("Verify Trivia auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTriviaUpdatableFieldsEquals(Trivia expected, Trivia actual) {
        assertThat(expected)
            .as("Verify Trivia relevant properties")
            .satisfies(e -> assertThat(e.getLevel()).as("check level").isEqualTo(actual.getLevel()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getEndDate()).as("check endDate").isEqualTo(actual.getEndDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTriviaUpdatableRelationshipsEquals(Trivia expected, Trivia actual) {
        assertThat(expected)
            .as("Verify Trivia relationships")
            .satisfies(e -> assertThat(e.getTriviaQuestions()).as("check triviaQuestions").isEqualTo(actual.getTriviaQuestions()));
    }
}
